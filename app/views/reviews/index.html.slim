h1 レビューを探す
- @reviews.each do |review|
  = link_to review_path(review)
    p= review.movie_id
    p= review.user_id
    p= review.total_score
    p= review.story_score
    p= review.direction_score
    p= review.acting_score
    p= review.visual_score
    p= review.music_score
    p= review.body
    div.m id = review.movie_id

javascript:
  a = document.getElementsByClassName('m') // aには.mのdivのHTML情報が配列-ハッシュで入っており、それぞれのidはmovie_idになっているのでそれを使って繰り返し処理でdetailリクエスト以降をする？
  movie_id = a.id;
  fetch(`https://api.themoviedb.org/3/movie/${gon.movie_id}?api_key=${gon.TMDb_KEY}&language=en-US`) //movie_idを使ってdetailをリクエスト
  .then(response => {
    return response.json();
  })
  .then(data => {
    console.log(data);
    p = data.poster_path; //data内のポスター画像pathを代入

    container = document.getElementById('poster')
    const row = document.createElement('div');
    row.setAttribute('class', 'item');

    const poster = document.createElement('img');
    poster.src = `https://image.tmdb.org/t/p/w200${p}`; //ポスター画像のソース

    container.appendChild(row);
    row.appendChild(poster);
  })