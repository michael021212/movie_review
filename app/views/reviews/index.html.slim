h1 レビューを探す
div.flex
  - @reviews.each do |review|
    div
      div
        = attachment_image_tag review.user, :image, size: "80x80", class: "img-circle pull-left profile-thumb", fallback: "no_profile_image.jpg"
      = link_to user_path(review.id)
        = "名前:  #{review.user.name}"
      br
      = link_to review_path(review)
        = "movie_id:  #{review.movie_id}"
        br
        = "総合スコア:  #{review.total_score}"
        br
        = review.body
        div.m[id="review-#{review.id}"]
        //// 各レビューのGOOD数
        i.far.fa-thumbs-up
        = review.goods.count
        //// 各レビューのBAD数
        i.far.fa-thumbs-down
        = review.bads.count

javascript:
  let movie_id = gon.movie_id // reviewが持っているmovie_idの配列
  let review_id = gon.review_id // reviewのidの配列
  for (let i = 0; i < review_id.length; i++) {
    fetch(`https://api.themoviedb.org/3/movie/${movie_id[i]}?api_key=${gon.TMDb_KEY}&language=ja-JP`) //movie_idを使ってdetailをリクエスト
    .then(response => {
      return response.json();
    })
    .then(data => {
      let poster_path = data.poster_path; //data内のポスター画像pathを代入
      let item = document.getElementById(`review-${review_id[i]}`)
      //const row = document.createElement('div');
      //row.setAttribute('class', 'item');

      const poster = document.createElement('img');
      poster.src = `https://image.tmdb.org/t/p/w200${poster_path}`; //ポスター画像のソース

      item.appendChild(poster);
      //row.appendChild(poster);
    })

  }
